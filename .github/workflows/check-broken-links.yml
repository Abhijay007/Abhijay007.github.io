name: Check Broken Links

on:
  schedule:
    - cron: "0 1 1 * *"
  workflow_dispatch:

env:
  URL: https://uptane.org
  ISSUE_TEMPLATE: ".github/ISSUE_TEMPLATE/check-broken-links.md"
  CONFIG: ".github/broken-link-gha-config.json"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out master
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Run check for Broken Link
        id: link-snitch
        uses: victoriadrake/link-snitch@master

      - name: Check for Whitelisted URLs
        run: |
          # Add a script to check if the broken links are in the whitelist
          # You can use any programming/scripting language for this step
          # Example using bash
          WHITELIST=("https://example.com" "https://example.org")
          for URL in $(jq -r '.failures[].url' ${{ steps.link-snitch.outputs.link_snitch_output }})
          do
            if [[ " ${WHITELIST[@]} " =~ " $URL " ]]; then
              echo "URL $URL is whitelisted, skipping..."
            else
              echo "Creating issue for $URL"
              # Add logic to create an issue for the non-whitelisted link
            fi
          done
        env:
          LINK_SNITCH_OUTPUT: ${{ steps.link-snitch.outputs.link_snitch_output }}
        if: always() # Run this step even if previous steps fail

      - name: Creating issue
        uses: JasonEtco/create-an-issue@v2.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
          LOG_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}?check_suite_focus=true
        with:
          filename: ${{ env.ISSUE_TEMPLATE }}
        if: failure()
