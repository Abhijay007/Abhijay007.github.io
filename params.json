{"name":"The Update Framework (TUF)","tagline":"Like the S in HTTPS, a plug-and-play secure updater for your software","body":"# A Framework for Securing Software Update Systems\r\n\r\nThe Update Framework (TUF) helps developers secure their new or existing software update systems. Software update systems are vulnerable to many known attacks, including those that can result in clients being compromised or crashed. TUF helps solve this problem by providing a flexible security framework that can be added to software updaters.\r\n\r\n## What Is a software update system?\r\n\r\nGenerally, a software update system is an application (or part of an application) running on a client system that obtains and installs software. This can include updates to software that is already installed or even completely new software.\r\n\r\nThree major classes of software update systems are:\r\n\r\n* **Application updaters** which are used by applications use to update themselves. For example, Firefox updates itself through its own application updater.\r\n* **Library package managers** such as those offered by many programming languages for installing additional libraries. These are systems such as Python's pip/easy_install + PyPI, Perl's CPAN, Ruby's Gems, and PHP's PEAR.\r\n* **System package managers** used by operating systems to update and install all of the software on a client system. Debian's APT, Red Hat's YUM, and openSUSE's YaST are examples of these.\r\n\r\n## Our approach\r\n\r\nThere are literally thousands of different software update systems in common use today. (In fact the average Windows user has about two dozen different software updaters on their machine!)\r\n\r\nWe are building a library that can be universally (and in most cases transparently) used to secure software update systems. \r\n\r\n## Where to start\r\n\r\nWant to know more? Try the following:\r\n\r\n* Papers\r\n    * [​A Look in the Mirror: Attacks on Package Managers](https://isis.poly.edu/~jcappos/papers/cappos_mirror_ccs_08.pdf)\r\n    * [Package Management Security](https://isis.poly.edu/~jcappos/papers/cappos_pmsec_tr08-02.pdf)\r\n    * [Survivable Key Compromise in Software Update Systems](https://isis.poly.edu/~jcappos/papers/samuel_tuf_ccs_2010.pdf)\r\n* [General specification](https://github.com/theupdateframework/tuf/blob/develop/docs/tuf-spec.txt)\r\n* [Source code](https://github.com/theupdateframework/tuf)\r\n* [Mailing list](https://groups.google.com/forum/?fromgroups#%21forum/theupdateframework)\r\n\r\n### Securing Python package management\r\n\r\n* [PEP 458: Surviving a Compromise of PyPI](https://github.com/theupdateframework/pep-on-pypi-with-tuf)\r\n* [PyCon 2013 lightning talk](https://www.youtube.com/watch?v=2sx1lS6cT3g) [(​Slides)](https://docs.google.com/presentation/d/1FMptD5sMH41BTgS3-PN0-7j5Zqvs_zZZ3ntsD_4u-7w/edit?usp=sharing)\r\n* [Test pip with TUF](https://github.com/theupdateframework/pip/wiki/pip-over-TUF)\r\n* [​Automation for creating, updating and destroying a TUF-secured PyPI mirror](https://github.com/theupdateframework/pypi.updateframework.com)\r\n* [​Source code of pip with TUF](https://github.com/theupdateframework/pip/tree/tuf-master)\r\n    * [Little is required to integrate pip with TUF](https://github.com/theupdateframework/pip/compare/pypa:master...tuf-master)\r\n\r\n### Securing Ruby package management\r\n\r\n* [Developers from Square have demonstrated an initial implementation of TUF for RubyGems](https://groups.google.com/forum/#%21topic/rubygems-tuf/vCxUSX51bbo)\r\n* [Atlassian Dev Den Tech Talk Series: Securing Rubygems with TUF](https://www.youtube.com/watch?v=J0GkcToeDiM)\r\n* [Securing RubyGems with TUF, Part 1](http://corner.squareup.com/2013/12/securing-rubygems-with-tuf-part-1.html)\r\n* [Securing RubyGems with TUF, Part 2](http://corner.squareup.com/2013/12/securing-rubygems-with-tuf-part-2.html)\r\n* [Securing RubyGems with TUF, Part 3](http://corner.squareup.com/2013/12/securing-rubygems-with-tuf-part-3.html)\r\n\r\n### Press\r\n\r\n* [Justin Cappos - TUF (The Update Framework)](http://vimeo.com/88774074)\r\n\r\n### Acknowledgements\r\n\r\nThis material is based upon work supported by the National Science Foundation under Grant No. CNS-1345049 and CNS-0959138.  Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.","google":"UA-47156304-1","note":"Don't delete this file! It's used internally to help with page regeneration."}